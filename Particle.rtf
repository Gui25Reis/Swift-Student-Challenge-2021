{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red248\green80\blue153;\red0\green0\blue0;\red255\green255\blue255;
\red107\green170\blue67;\red213\green177\blue255;\red197\green176\blue68;}
{\*\expandedcolortbl;;\cssrgb\c98896\c42114\c66499;\csgray\c0\c0;\cssrgb\c100000\c100000\c100000;
\cssrgb\c48672\c70957\c33070;\cssrgb\c87028\c75839\c99946;\cssrgb\c81473\c73653\c33549;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 // Particle.swift\
\
import\cf4   SpriteKit
\f1 \cf0 \
\

\f0 \cf2 public\cf4  \cf2 class\cf4  Particle \{
\f1 \cf0 \

\f0 \cf4     \cf5 // Atributos da classe:
\f1 \cf0 \

\f0 \cf4     \cf2 private\cf4  \cf2 var\cf4  node:\cf6 SKShapeNode\cf4  = SKShapeNode(circleOfRadius: \cf7 20\cf4 )  \cf5 // Bolinha
\f1 \cf0 \

\f0 \cf4     \cf2 private\cf4  \cf2 var\cf4  radius:\cf6 CGFloat\cf4  = \cf7 20\cf4                                  \cf5 // Tamanho da bolinha
\f1 \cf0 \

\f0 \cf4     \cf2 private\cf4  \cf2 let\cf4  color:\cf6 UIColor\cf4  =  colorLiteral(red: 0.3997545242, green: 0.6133489013, blue: 0.2060141265, alpha: 1.0)                                  \cf5 // Cor da bolinha
\f1 \cf0 \

\f0 \cf4     \cf2 private\cf4  \cf2 var\cf4  initialTime:\cf6 Int\cf4  = \cf7 0\cf4                                  \cf5 // Quando foi cirada
\f1 \cf0 \

\f0 \cf4     \cf2 private\cf4  \cf2 var\cf4  lifeTime:\cf6 Int\cf4  = \cf7 0\cf4                                     \cf5 // QUanto tempo j\'e1 durou
\f1 \cf0 \

\f0 \cf4     
\f1 \cf0 \

\f0 \cf4     \cf5 // Construtor: tira a borda e coloca a cor da bolinha
\f1 \cf0 \

\f0 \cf4     \cf2 init\cf4 () \{
\f1 \cf0 \

\f0 \cf4         node.lineWidth = \cf7 0
\f1 \cf0 \

\f0 \cf4         node.fillColor = \cf2 self\cf4 .color
\f1 \cf0 \

\f0 \cf4     \}
\f1 \cf0 \

\f0 \cf4     \cf5 // Desstrutor: elimina(limpa) os atributos
\f1 \cf0 \

\f0 \cf4     \cf2 deinit\cf4 \{
\f1 \cf0 \

\f0 \cf4         \cf2 self\cf4 .node.delete(\cf2 nil\cf4 )
\f1 \cf0 \

\f0 \cf4         \cf2 self\cf4 .radius = \cf7 0
\f1 \cf0 \

\f0 \cf4         \cf2 self\cf4 .initialTime = \cf7 0
\f1 \cf0 \

\f0 \cf4         \cf2 self\cf4 .lifeTime = \cf7 0
\f1 \cf0 \

\f0 \cf4     \}
\f1 \cf0 \

\f0 \cf4     
\f1 \cf0 \

\f0 \cf4     \cf5 // M\'e9todo especial: retorna a bolinha
\f1 \cf0 \

\f0 \cf4     \cf2 public\cf4  \cf2 func\cf4  getNode() -> \cf6 SKShapeNode\cf4  \{
\f1 \cf0 \

\f0 \cf4         \cf2 return\cf4  \cf2 self\cf4 .node
\f1 \cf0 \

\f0 \cf4     \}
\f1 \cf0 \

\f0 \cf4     
\f1 \cf0 \

\f0 \cf4     \cf5 // M\'e9todo especial: define as posi\'e7\'f5es
\f1 \cf0 \

\f0 \cf4     \cf2 public\cf4  \cf2 func\cf4  setPositions(\cf2 _\cf4  x_:\cf6 CGFloat\cf4 , \cf2 _\cf4  y_:\cf6 CGFloat\cf4 ) \{
\f1 \cf0 \

\f0 \cf4         \cf2 self\cf4 .node.position.x = x_
\f1 \cf0 \

\f0 \cf4         \cf2 self\cf4 .node.position.y = y_
\f1 \cf0 \

\f0 \cf4     \}
\f1 \cf0 \

\f0 \cf4     
\f1 \cf0 \

\f0 \cf4     \cf5 // M\'e9todo especial: retorna as posi\'e7\'f5es
\f1 \cf0 \

\f0 \cf4     \cf2 public\cf4  \cf2 func\cf4  getPositions() -> [\cf6 CGFloat\cf4 ] \{
\f1 \cf0 \

\f0 \cf4         \cf2 return\cf4  [\cf2 self\cf4 .node.position.x, \cf2 self\cf4 .node.position.y]
\f1 \cf0 \

\f0 \cf4     \}
\f1 \cf0 \

\f0 \cf4     
\f1 \cf0 \

\f0 \cf4     \cf5 // M\'e9todo especial: Define a cor da bolinha perseguida
\f1 \cf0 \

\f0 \cf4     \cf2 public\cf4  \cf2 func\cf4  setUserColor() \{
\f1 \cf0 \

\f0 \cf4         node.fillColor =  colorLiteral(red: 0.0, green: 0.0, blue: 0.0, alpha: 1.0)
\f1 \cf0 \

\f0 \cf4     \}
\f1 \cf0 \

\f0 \cf4     
\f1 \cf0 \

\f0 \cf4     \cf5 // M\'e9todo especial: Define a cor da bolinha perseguida
\f1 \cf0 \

\f0 \cf4     \cf2 public\cf4  \cf2 func\cf4  setSpecialColor() \{
\f1 \cf0 \

\f0 \cf4         node.fillColor =  colorLiteral(red: 0.8267027736, green: 0.3405264616, blue: 0.9946629405, alpha: 1.0)
\f1 \cf0 \

\f0 \cf4     \}
\f1 \cf0 \

\f0 \cf4     
\f1 \cf0 \

\f0 \cf4     \cf5 // M\'e9todo especial: Define a a\'e7\'e3o/posi\'e7\'e3o das bolinhas
\f1 \cf0 \

\f0 \cf4     \cf2 public\cf4  \cf2 func\cf4  setRun(\cf2 _\cf4  act_:\cf6 SKAction\cf4 ) \{
\f1 \cf0 \

\f0 \cf4         node.run(act_)
\f1 \cf0 \

\f0 \cf4     \}
\f1 \cf0 \

\f0 \cf4     
\f1 \cf0 \

\f0 \cf4     \cf5 // M\'e9todo especial: Retorna o raio
\f1 \cf0 \

\f0 \cf4     \cf2 public\cf4  \cf2 func\cf4  getRadius() -> \cf6 CGFloat\cf4  \{
\f1 \cf0 \

\f0 \cf4         \cf2 return\cf4  \cf2 self\cf4 .radius
\f1 \cf0 \

\f0 \cf4     \}
\f1 \cf0 \

\f0 \cf4     
\f1 \cf0 \

\f0 \cf4     \cf5 // M\'e9todo especial: Retorna o tempo inicial
\f1 \cf0 \

\f0 \cf4     \cf2 public\cf4  \cf2 func\cf4  getInitialTime() -> \cf6 Int\cf4  \{
\f1 \cf0 \

\f0 \cf4         \cf2 return\cf4  \cf2 self\cf4 .initialTime
\f1 \cf0 \

\f0 \cf4     \}
\f1 \cf0 \

\f0 \cf4     
\f1 \cf0 \

\f0 \cf4     \cf5 // M\'e9todo especial: Define o tempo de vida
\f1 \cf0 \

\f0 \cf4     \cf2 public\cf4  \cf2 func\cf4  setLifeTime(t_:\cf6 Int\cf4 )\{
\f1 \cf0 \

\f0 \cf4         \cf2 self\cf4 .lifeTime = t_
\f1 \cf0 \

\f0 \cf4     \}
\f1 \cf0 \

\f0 \cf4     
\f1 \cf0 \

\f0 \cf4     \cf5 // M\'e9todo especial: Retorna o tempo de vida
\f1 \cf0 \

\f0 \cf4     \cf2 public\cf4  \cf2 func\cf4  getLifeTime() -> \cf6 Int\cf4  \{
\f1 \cf0 \

\f0 \cf4         \cf2 return\cf4  \cf2 self\cf4 .lifeTime
\f1 \cf0 \

\f0 \cf4     \}
\f1 \cf0 \

\f0 \cf4 \}
\f1 \cf0 \
}